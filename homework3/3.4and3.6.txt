3.4在在许多程序中都包含下面一段代码：
dup2(fd, 0);
dup2(fd, 1);
dup2(fd, 2);
if (fd > 2)
5 2 U N I X环境高级编程
c l o s e ( f d ) ;
为了说明i f语句的必要性，假设f d是1，画出每次调用d u p 2时3个描述符项及相应的文件表项的
变化情况。然后再画出f d为3的情况。
答案 
如果fd是1，执行dup2(fd ,1)后返回1，但是没有关闭描述符1.调用3次dup2后，3个描述符指向相同的文件表项，所以不需要关闭描述符。

但如果fd是3,调用3次dup2后，有4个描述符指向相同的文件表项，这种情况下就需要关闭描述符3

3.6如启用添加标志打开一文件以便读、写，能否用 l s e e k在任一位置开始读？能否
用l s e e k更新文件中任一部分的数据？请写一段程序以验证之。
#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>

int main() {
    int fd;
    if ((fd = open("test.txt", O_RDWR | O_APPEND)) == -1) {
        printf("open failed\n");
        exit(0);
    }

    write(fd, "World!\n", 7);

    int r;
    if ((r = lseek(fd, 0, SEEK_SET)) == -1) {
        printf("lseek failed\n");
        close(fd);
        exit(0);
    }

    write(fd, "Hello", 5);
    close(fd);

    if ((fd = open("test.txt", O_RDWR | O_APPEND)) == -1) {
        printf("open failed\n");
        exit(0);
    }

    if ((r = lseek(fd, 0, SEEK_SET)) == -1) {
        printf("lseek failed\n");
        close(fd);
        exit(0);
    }

    char str[32];
    read(fd, str, 15);
    printf("%s\n", str);
    close(fd);

    return 0;
}
lseek 可以在任一位置读，但由追加标志打开的文件只能在尾端写入。
